# Author: Vigith Maurice

package rangeexpr

type RangeExpr Peg {
 Expression
}

e <- combinedexpr? !.

combinedexpr <- yrexpr cexpr?

yrexpr <- sp 
   ( brackets
   / cluster
   / value
   / rlookup
   )

cexpr <- sp
   ( union
   / intersection
   / difference
   )
   sp

union <- ',' yrexpr cexpr? { p.addOperator(typeUnion) }

intersection <- ',' sp '&' yrexpr cexpr? { p.addOperator(typeIntersection) }

difference <- ',' sp '-' yrexpr cexpr? { p.addOperator(typeDifference) }

cluster <- ('%' < 'RANGE' > { p.addValue(buffer[begin:end]); } / '%' yrexpr / '%' rlookup) { p.addOperator(typeClusterLookup) } key?

key <- ':' < [A-Z0-9]+ > { p.addValue(buffer[begin:end]); p.addOperator(typeKeyLookup); }

rlookup <- '*' rvalue { p.addOperator(typeKeyReverseLookup); } attr? cexpr?

rvalue <- < [[a-z0-9- .]]+ > { p.addValue(buffer[begin:end]) }

attr <- ';' < [A-Z0-9]+ > { p.addValue(buffer[begin:end]); p.addOperator(typeKeyReverseLookupAttr); } hint?

hint <- ':' value { p.addOperator(typeKeyReverseLookupHint) } 

# start with [:alpha] [:alphanum]? followed with [-a-z0-9] followed by [:alphanum]
value <- < ( first last? middle+ ) / ( first last* ) > { p.addValue(buffer[begin:end]) }
# split value into small blocks
first <- [a-z0-9]+
middle <- ( '-' / '.' ) last 
last <- first

brackets <- '(' combinedexpr ')'

sp <- ' '*
